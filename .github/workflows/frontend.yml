name: Frontend CI/CD

on:
  push:
    paths:
      - "front/**"
      - ".github/workflows/frontend.yml"
  pull_request:
    paths:
      - "front/**"
      - ".github/workflows/frontend.yml"

permissions:
  contents: write
  packages: write

env:
  IMAGE_NAME: agent-frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image to GHCR
        env:
          IMAGE_REPO: ghcr.io/${{ github.repository_owner }}/agent-frontend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          SHORT_SHA=${IMAGE_TAG::7}
          # Add both a short-sha tag and "latest" for convenience
          docker build -t $IMAGE_REPO:$SHORT_SHA -t $IMAGE_REPO:latest ./front
          docker push $IMAGE_REPO:$SHORT_SHA
          docker push $IMAGE_REPO:latest
          echo "IMAGE_FULL=$IMAGE_REPO:$SHORT_SHA" >> $GITHUB_ENV

      # Roll out on your VM (where kubectl already works)
      # - name: Rollout via SSH on VM
      #   uses: appleboy/ssh-action@v0.1.6
      #   with:
      #     host: ${{ secrets.VM_HOST }}
      #     port: 2222 # e.g., 2222
      #     username: ${{ secrets.VM_USER }}
      #     key: ${{ secrets.VM_SSH_KEY }}
      #     script: |
      #       set -Eeuo pipefail
      #       echo "Using image: ${{ env.IMAGE_FULL }}"
      #       # Optional: show current context/cluster
      #       kubectl config current-context || true
      #       kubectl cluster-info || true
      #       # Update Deployment and image & rollout
      #       kubectl set image deployment/front -n ai-stack front=${{ env.IMAGE_FULL }}
      #       kubectl rollout status deployment/front -n ai-stack
      #       kubectl -n ai-stack get pods -l app=front -o wide

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: latest

      - name: Configure kubeconfig
        shell: bash
        run: |
          mkdir -p $HOME/.kube
          printf "%s" "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          if [ -n "${{ secrets.KUBE_CONTEXT }}" ]; then
            kubectl config use-context ${{ secrets.KUBE_CONTEXT }}
          fi

      - name: Update Deployment and image & rollout
        shell: bash
        run: |
          kubectl set image deployment/agent -n ai-stack agent=${{ env.IMAGE_FULL }}
          kubectl rollout status deployment/agent -n ai-stack
          kubectl -n ai-stack get pods -l app=front -o wide
