name: Backend CI/CD.

on:
  push:
    paths:
      - "back/**"
      - ".github/workflows/backend.yml"
  pull_request:
    paths:
      - "back/**"
      - ".github/workflows/backend.yml"

permissions:
  contents: write
  packages: write

env:
  IMAGE_NAME: agent-backend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Log in to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build & push image to GHCR
      #   env:
      #     IMAGE_REPO: ghcr.io/${{ github.repository_owner }}/agent-backend
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     SHORT_SHA=${IMAGE_TAG::7}
      #     docker build -t $IMAGE_REPO:$SHORT_SHA -t $IMAGE_REPO:latest ./back
      #     docker push $IMAGE_REPO:$SHORT_SHA
      #     docker push $IMAGE_REPO:latest
      #     echo "IMAGE_FULL=$IMAGE_REPO:$SHORT_SHA" >> $GITHUB_ENV

      # Roll out on your VM (where kubectl already works)
      # - name: Rollout via SSH on VM
      #   uses: appleboy/ssh-action@v0.1.6
      #   with:
      #     host: ${{ secrets.VM_HOST }}
      #     port: 2222 # e.g., 2222
      #     username: ${{ secrets.VM_USER }}
      #     key: ${{ secrets.VM_SSH_KEY }}
      #     script: |
      #       set -Eeuo pipefail
      #       echo "Using image: ${{ env.IMAGE_FULL }}"
      #       # Optional: show current context/cluster
      #       kubectl config current-context || true
      #       kubectl cluster-info || true

      #       # Update deployment image and wait for rollout
      #       kubectl -n ai-stack set image deployment/agent agent=${{ env.IMAGE_FULL }}
      #       kubectl -n ai-stack rollout status deployment/agent --timeout=180s

      #       # Sanity: show pods
      #       kubectl -n ai-stack get pods -l app=agent -o wide

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: latest

      - name: Configure kubeconfig (raw YAML)
        shell: bash
        run: |
          set -Eeuo pipefail
          mkdir -p "$HOME/.kube"
          printf '%s' "${{ secrets.KUBE_CONFIG }}" > "$HOME/.kube/config"
          sed -i 's/\r$//' "$HOME/.kube/config"   # fix CRLF if needed
          chmod 600 "$HOME/.kube/config"
          echo "Contexts:"; kubectl config get-contexts -o name
          echo "Current:"; kubectl config current-context || true

      - name: Update Deployment image & rollout
        run: |
          kubectl set image deployment/agent agent=$IMAGE_FULL --namespace=ai-stack
          kubectl rollout status deployment/agent --namespace=ai-stack
          kubectl -n ai-stack get pods -l app=agent -o wide
