name: Backend CI/CD

on:
  push:
    paths:
      - "back/**"
      - ".github/workflows/backend.yml"
  pull_request:
    paths:
      - "back/**"
      - ".github/workflows/backend.yml"

permissions:
  contents: write
  packages: write

env:
  IMAGE_NAME: agent-backend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image to GHCR
        env:
          IMAGE_REPO: ghcr.io/${{ github.repository_owner }}/agent-backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          SHORT_SHA=${IMAGE_TAG::7}
          docker build -t $IMAGE_REPO:$SHORT_SHA -t $IMAGE_REPO:latest ./back
          docker push $IMAGE_REPO:$SHORT_SHA
          docker push $IMAGE_REPO:latest
          echo "IMAGE_FULL=$IMAGE_REPO:$SHORT_SHA" >> $GITHUB_ENV

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: latest

      - name: Configure kubeconfig
        shell: bash
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          if [ -n "${{ secrets.KUBE_CONTEXT }}" ]; then
            kubectl config use-context ${{ secrets.KUBE_CONTEXT }}
          fi

      - name: Update Deployment image & rollout
        run: |
          kubectl set image deployment/agent agent=$IMAGE_FULL --namespace=ai-stack
          kubectl rollout status deployment/agent --namespace=ai-stack
          kubectl -n ai-stack get pods -l app=agent -o wide
